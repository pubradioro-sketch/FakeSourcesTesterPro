name: Build Windows EXE (onedir safe)

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # 1. Ia codul din repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Instalează Python pe runner
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Instalează dependențele direct în mediul global
      #    (fără venv separat, ca să fie simplu și stabil)
      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==5.13.0

      # 4. Rulează PyInstaller în modul "onedir"
      #    - FĂRĂ --onefile
      #    - FĂRĂ --hidden-import PySimpleGUI (nu mai e nevoie acum)
      #
      #    Asta produce:
      #      dist/FakeSourcesTesterPro/
      #        FakeSourcesTesterPro.exe
      #        tot ce trebuie ca să ruleze
      #
      - name: Build EXE (onedir, friendlier for AV)
        shell: pwsh
        run: |
          pyinstaller `
            --noconfirm `
            --windowed `
            --name "FakeSourcesTesterPro" `
            --collect-all PySimpleGUI `
            main_gui_pro.py

      # 5. Creează o arhivă ZIP cu tot folderul build-uit
      #    ca să o poți descărca din Artifacts
      - name: Zip build folder
        shell: pwsh
        run: |
          $zipPath = "FakeSourcesTesterPro-windows.zip"
          $distDir = "dist/FakeSourcesTesterPro"
          Compress-Archive -Path $distDir\* -DestinationPath $zipPath -Force

      # 6. Publică ZIP-ul ca artifact descărcabil
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: FakeSourcesTesterPro-windows
          path: FakeSourcesTesterPro-windows.zip
